/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  12
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh true;
snap            true;
addLayers       false; // We'll keep this simple for now

geometry
{
    DepotCelling.stl
    {
        type triSurfaceMesh;
        file "DepotCelling.stl";
        name DepotCelling;
    }
    DepotWall.stl
    {
        type triSurfaceMesh;
        file "DepotWall.stl";
        name DepotWall;
    }
    DepotFloor.stl
    {
        type triSurfaceMesh;
        file "DepotFloor.stl";
        name DepotFloor;
    }
    DepotPanel12.stl
    {
        type triSurfaceMesh;
        file "DepotPanel12.stl";
        name DepotPanel12;
    }
    DepotWindow.stl
    {
        type triSurfaceMesh;
        file "DepotWindow.stl";
        name DepotWindow;
    }
    DepotShutter.stl
    {
        type triSurfaceMesh;
        file "DepotShutter.stl";
        name DepotShutter;
    }
};

castellatedMeshControls
{
   maxLocalCells 1000000;
   maxGlobalCells 2000000;
   minRefinementCells 10;
   nCellsBetweenLevels 3;

   features
   (
       { file "DepotCelling.eMesh"; level 1; }
       { file "DepotWall.eMesh"; level 1; }
       { file "DepotFloor.eMesh"; level 1; }
       { file "DepotPanel12.eMesh"; level 2; }
       { file "DepotWindow.eMesh"; level 2; }
       { file "DepotShutter.eMesh"; level 2; }
   );

   refinementSurfaces
   {
        DepotCelling
        {
            level (1 1);
        }
        DepotWall
        {
            level (1 1);
        }
        DepotFloor
        {
            level (1 1);
        }
        DepotPanel12
        {
            level (2 2);
        }
        DepotWindow
        {
            level (2 2);
        }
        DepotShutter
        {
            level (2 2);
        }
    }
    // A point inside the mesh region to keep.
    // Make sure this point is inside the wall.
   locationInMesh (0 0 0);

   resolveFeatureAngle 60;
}

snapControls
{
    // Number of patch smoothing iterations before finding correspondence
    // to surface
    nSmoothPatch 3;
    // Maximum relative distance for points to be attracted by surface.
    // True distance is this factor times local maximum edge length.
    // Note: changed(corrected) w.r.t 17x! (17x used 2* tolerance)
    tolerance 3.0;

    // Number of mesh displacement relaxation iterations.
    nSolveIter 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Feature snapping

        // Number of feature edge snapping iterations.
        // Leave out altogether to disable.
        nFeatureSnapIter 15;

        // Detect (geometric only) features by sampling the surface
        // (default=false).
        implicitFeatureSnap false;

        // Use castellatedMeshControls::features (default = true)
        explicitFeatureSnap true;

        // Detect features between multiple surfaces
        // (only for explicitFeatureSnap, default = false)
        multiRegionFeatureSnap false;
}

addLayersControls
{
    layers
    {
    }

    relativeSizes       true;
    expansionRatio      1.2;
    finalLayerThickness 0.5;
    minThickness        1e-3;
}

meshQualityControls
{
    #include "meshQualityDict"

    // Optional : some meshing phases allow usage of relaxed rules.
    // See e.g. addLayersControls::nRelaxedIter.
    relaxed
    {
        //- Maximum non-orthogonality allowed. Set to 180 to disable.
        maxNonOrtho 75;
    }
}


writeFlags
(
);

mergeTolerance 1e-6;


